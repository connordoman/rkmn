use super::Item;

pub enum KeyItem {
    MachBike,
    CoinCase,
    ItemFinder,
    OldRod,
    GoodRod,
    SuperRod,
    SSTicket,
    ContestPass,
    WailmerPail,
    DevonGoods,
    SootSack,
    BasementKey,
    AcroBike,
    PokeBlockCase,
    Letter,
    EonTicket,
    RedOrb,
    BlueOrb,
    Scanner,
    GoGoggles,
    Meteorite,
    Room1Key,
    Room2Key,
    Room4Key,
    Room6Key,
    StorageKey,
    RootFossil,
    ClawFossil,
    DevonScope,
}

impl Item for KeyItem {
    fn name(&self) -> &str {
        match self {
            KeyItem::MachBike => "Mach Bike",
            KeyItem::CoinCase => "Coin Case",
            KeyItem::ItemFinder => "Item Finder",
            KeyItem::OldRod => "Old Rod",
            KeyItem::GoodRod => "Good Rod",
            KeyItem::SuperRod => "Super Rod",
            KeyItem::SSTicket => "SS Ticket",
            KeyItem::ContestPass => "Contest Pass",
            KeyItem::WailmerPail => "Wailmer Pail",
            KeyItem::DevonGoods => "Devon Goods",
            KeyItem::SootSack => "Soot Sack",
            KeyItem::BasementKey => "Basement Key",
            KeyItem::AcroBike => "Acro Bike",
            KeyItem::PokeBlockCase => "PokeBlock Case",
            KeyItem::Letter => "Letter",
            KeyItem::EonTicket => "Eon Ticket",
            KeyItem::RedOrb => "Red Orb",
            KeyItem::BlueOrb => "Blue Orb",
            KeyItem::Scanner => "Scanner",
            KeyItem::GoGoggles => "Go-Goggles",
            KeyItem::Meteorite => "Meteorite",
            KeyItem::Room1Key => "Room 1 Key",
            KeyItem::Room2Key => "Room 2 Key",
            KeyItem::Room4Key => "Room 4 Key",
            KeyItem::Room6Key => "Room 6 Key",
            KeyItem::StorageKey => "Storage Key",
            KeyItem::RootFossil => "Root Fossil",
            KeyItem::ClawFossil => "Claw Fossil",
            KeyItem::DevonScope => "Devon Scope",
        }
    }

    fn description(&self) -> &str {
        match self {
            KeyItem::MachBike => "A bicycle that can ride up muddy slopes.",
            KeyItem::CoinCase => "A case for holding coins.",
            KeyItem::ItemFinder => "A device that indicates hidden items.",
            KeyItem::OldRod => "A fishing rod for hooking Pokemon.",
            KeyItem::GoodRod => "A better rod for hooking Pokemon.",
            KeyItem::SuperRod => "The best rod for hooking Pokemon.",
            KeyItem::SSTicket => "A ticket for riding the ferry S.S. Tidal.",
            KeyItem::ContestPass => "A pass for entering Pokemon Contests.",
            KeyItem::WailmerPail => "A pail used for watering berries.",
            KeyItem::DevonGoods => "A package from the Devon Corporation.",
            KeyItem::SootSack => "A sack for storing volcanic ash.",
            KeyItem::BasementKey => "A key for the Mauville City Food Court.",
            KeyItem::AcroBike => "A bicycle that can jump over obstacles.",
            KeyItem::PokeBlockCase => "A case for holding PokeBlocks.",
            KeyItem::Letter => "A letter from a Wingull.",
            KeyItem::EonTicket => "A ticket for a ferry to a mysterious island.",
            KeyItem::RedOrb => "A shiny red orb.",
            KeyItem::BlueOrb => "A shiny blue orb.",
            KeyItem::Scanner => "A device for finding invisible obstacles.",
            KeyItem::GoGoggles => "Goggles that protect the eyes from sandstorms.",
            KeyItem::Meteorite => "A meteorite from space.",
            KeyItem::Room1Key => "A key for opening doors in New Mauville.",
            KeyItem::Room2Key => "A key for opening doors in New Mauville.",
            KeyItem::Room4Key => "A key for opening doors in New Mauville.",
            KeyItem::Room6Key => "A key for opening doors in New Mauville.",
            KeyItem::StorageKey => "A key for opening a storage room in New Mauville.",
            KeyItem::RootFossil => "A fossil of an ancient Pokemon.",
            KeyItem::ClawFossil => "A fossil of an ancient Pokemon.",
            KeyItem::DevonScope => "A device for seeing invisible Pokemon.",
        }
    }

    fn value(&self) -> u16 {
        0
    }
}
